<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 5.4.2">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">


<link rel="stylesheet" href="/lib/font-awesome/css/all.min.css">

<script id="hexo-configurations">
    var NexT = window.NexT || {};
    var CONFIG = {"hostname":"wenq77.github.io","root":"/","scheme":"Gemini","version":"7.8.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12,"onmobile":false},"copycode":{"enable":false,"show_result":false,"style":null},"back2top":{"enable":true,"sidebar":false,"scrollpercent":true},"bookmark":{"enable":false,"color":"#222","save":"auto"},"fancybox":false,"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"algolia":{"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"localsearch":{"enable":false,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}}};
  </script>

  <meta name="description" content="自建的博客怎么能没有分类和标签呢，所以我就去查了一下怎么去配置分类和标签。">
<meta property="og:type" content="article">
<meta property="og:title" content="test with pic">
<meta property="og:url" content="https://wenq77.github.io/2023/04/09/test%20with%20pic">
<meta property="og:site_name" content="Qian&#39;s note">
<meta property="og:description" content="自建的博客怎么能没有分类和标签呢，所以我就去查了一下怎么去配置分类和标签。">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://wenq77.github.io/uploads/test%20with%20pic-2023062423.png">
<meta property="og:image" content="https://wenq77.github.io/__%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled.png">
<meta property="article:published_time" content="2023-04-09T10:18:53.000Z">
<meta property="article:modified_time" content="2023-06-24T15:55:17.498Z">
<meta property="article:author" content="文七安">
<meta property="article:tag" content="测试">
<meta property="article:tag" content="测试2">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://wenq77.github.io/uploads/test%20with%20pic-2023062423.png">

<link rel="canonical" href="https://wenq77.github.io/2023/04/09/test%20with%20pic">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome : false,
    isPost : true,
    lang   : 'zh-CN'
  };
</script>

  <title>test with pic | Qian's note</title>
  






  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <span class="logo-line-before"><i></i></span>
      <h1 class="site-title">Qian's note</h1>
      <span class="logo-line-after"><i></i></span>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger">
    </div>
  </div>
</div>




<nav class="site-nav">
  <ul id="menu" class="main-menu menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-home fa-fw"></i>首页</a>

  </li>
        <li class="menu-item menu-item-tags">

    <a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>标签</a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>归档</a>

  </li>
  </ul>
</nav>




</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content post posts-expand">
            

    
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="https://wenq77.github.io/2023/04/09/test%20with%20pic">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="文七安">
      <meta itemprop="description" content="流光容易把人抛，红了樱桃，绿了芭蕉">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Qian's note">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          test with pic
        </h1>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-calendar"></i>
              </span>
              <span class="post-meta-item-text">发表于</span>

              <time title="创建时间：2023-04-09 18:18:53" itemprop="dateCreated datePublished" datetime="2023-04-09T18:18:53+08:00">2023-04-09</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="far fa-calendar-check"></i>
                </span>
                <span class="post-meta-item-text">更新于</span>
                <time title="修改时间：2023-06-24 23:55:17" itemprop="dateModified" datetime="2023-06-24T23:55:17+08:00">2023-06-24</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-folder"></i>
              </span>
              <span class="post-meta-item-text">分类于</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/testing/" itemprop="url" rel="index"><span itemprop="name">testing</span></a>
                </span>
            </span>

          
            <span class="post-meta-item" title="阅读次数" id="busuanzi_container_page_pv" style="display: none;">
              <span class="post-meta-item-icon">
                <i class="fa fa-eye"></i>
              </span>
              <span class="post-meta-item-text">阅读次数：</span>
              <span id="busuanzi_value_page_pv"></span>
            </span>
  
  <span class="post-meta-item">
    
      <span class="post-meta-item-icon">
        <i class="far fa-comment"></i>
      </span>
      <span class="post-meta-item-text">Valine：</span>
    
    <a title="valine" href="/2023/04/09/test%20with%20pic#valine-comments" itemprop="discussionUrl">
      <span class="post-comments-count valine-comment-count" data-xid="/2023/04/09/test%20with%20pic" itemprop="commentCount"></span>
    </a>
  </span>
  
  
            <div class="post-description">自建的博客怎么能没有分类和标签呢，所以我就去查了一下怎么去配置分类和标签。</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
        <h1 id="QEMU"><a href="#QEMU" class="headerlink" title="QEMU"></a>QEMU</h1><h2 id="CentOS-8-直接安装"><a href="#CentOS-8-直接安装" class="headerlink" title="CentOS 8 直接安装"></a>CentOS 8 直接安装</h2><p><img src="/../uploads/test%20with%20pic-2023062423.png"></p>
<p><a target="_blank" rel="noopener" href="https://www.onitroad.com/jc/kvm/how-to-install-kvm-on-centos-8-headless-server.html">如何在CentOS 8服务器上安装KVM</a></p>
<h2 id="qemu-编译"><a href="#qemu-编译" class="headerlink" title="qemu 编译"></a>qemu 编译</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/ashagaogao/article/details/125087277">centos安装qemu遇到Dependency “pixman-1” not found的问题_ashagaogao的博客-CSDN博客_pixman-1</a></p>
<p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/sinferwu/p/12650224.html">VNC server running on 127.0.0.1:5900</a></p>
<p><a target="_blank" rel="noopener" href="https://stackoverflow.com/questions/40746146/how-does-mobaxterm-know-whether-x11-forwarding-is-working-on-remote-server">How does mobaXterm know whether x11 forwarding is working on remote server?</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search pixman <span class="comment"># 查找可安装的缺失的包</span></span><br><span class="line">yum search pixman <span class="comment"># 查找可安装的缺失的包</span></span><br><span class="line"></span><br><span class="line">dnf --enablerepo=powertools install ninja-build</span><br><span class="line">yum install glib2 glib2-devel pixman pixman-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有pixman相关的错误</span></span><br><span class="line">find / -name <span class="string">&quot;pixman-1.pc&quot;</span></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=<span class="string">&quot;/usr/local/lib/pkgconfig/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># centos stream 8</span></span><br><span class="line">yum groupinstall <span class="string">&quot;Virtualization Host&quot;</span></span><br><span class="line">yum grouplist</span><br><span class="line"></span><br><span class="line"><span class="comment"># ERROR: glib-2.48 gthread-2.0 is required to compile QEMU</span></span><br><span class="line">yum install glib2 glib2-devel</span><br><span class="line"></span><br><span class="line">dnf --enablerepo=powertools install SDL2-devel</span><br><span class="line">yum install xorg-x11-xauth <span class="comment"># 用于qemu窗口显示，另外配置远程主机 /etc/ssh/sshd_config</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># centos stream 9</span></span><br><span class="line">dnf --enablerepo=crb install ninja-build</span><br><span class="line"></span><br><span class="line">sudo apt install libsdl2-dev -y</span><br><span class="line"><span class="comment"># centos stream 8</span></span><br><span class="line">yum install SDL-devel <span class="comment"># v5.0上似乎没用</span></span><br><span class="line">yum install libslirp-devel <span class="comment"># support for -nic user,xxx</span></span><br><span class="line">[qemu - network backend <span class="string">&#x27;user&#x27;</span> is not compiled into this binary - Stack Overflow](https://stackoverflow.com/questions/75641274/network-backend-user-is-not-compiled-into-this-binary)</span><br><span class="line"></span><br><span class="line">./configure --target-list=x86_64-softmmu --enable-kvm</span><br><span class="line"><span class="comment"># 指定make install 时安装在/home/wq/test/bin</span></span><br><span class="line">./configure --target-list=x86_64-softmmu --enable-kvm --prefix=/home/wq/bin/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> QEMU=&lt;path to qemu&gt;</span><br><span class="line"><span class="built_in">export</span> | grep QEMU</span><br></pre></td></tr></table></figure>
<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_42732867/article/details/104789431">linux中make install指定安装目录_make指定安装目录_台风吹过的夏天的博客-CSDN博客</a></p>
<blockquote>
<p>So you can pass configure <code>--enable-slirp</code> to force it to give you an error if you haven’t got the dependency, as a way of checking that you’ve installed the right system package for libslirp.</p>
</blockquote>
<p><a target="_blank" rel="noopener" href="https://stackoverflow.com/questions/75641274/network-backend-user-is-not-compiled-into-this-binary">network backend ‘user’ is not compiled into this binary</a></p>
<h2 id="创建img"><a href="#创建img" class="headerlink" title="创建img"></a>创建img</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 iso 创建 vm</span></span><br><span class="line">qemu-img create -f qcow2 centos8.img 100G <span class="comment"># 虚拟机镜像用来模拟虚拟机的硬盘，在启动虚拟机之前需要创建镜像文件</span></span><br><span class="line">qemu-system-x86_64 -enable-kvm centos8.img -m 8G -smp 4 -boot once=d -cdrom /data/CentOS-Stream-8-x86_64-latest-dvd1.iso</span><br></pre></td></tr></table></figure>
<p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/milton/p/12074890.html">Ubuntu命令行下缩小磁盘镜像img文件尺寸 - Milton - 博客园</a></p>
<h2 id="启动-qemu"><a href="#启动-qemu" class="headerlink" title="启动 qemu"></a>启动 qemu</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># QEMU Launch Guest</span></span><br><span class="line">./qemu/build/qemu-system-x86_64 -M q35,accel=kvm -cpu host -smp 16 -m 32G -drive file=centos-stream-embargo-8.img,<span class="keyword">if</span>=none,<span class="built_in">id</span>=virtio-disk0,format=raw  -device virtio-blk-pci,drive=virtio-disk0,bootindex=1 -netdev tap,br=bridge0,<span class="built_in">id</span>=nic0,helper=/usr/local/libexec/qemu-bridge-helper -device virtio-net-pci,netdev=nic0,mac=52:54:00:6a:3c:37  -display sdl -drive <span class="keyword">if</span>=pflash,format=raw,<span class="built_in">readonly</span>=on,file=/usr/share/edk2/ovmf/OVMF_CODE.cc.fd -drive <span class="keyword">if</span>=pflash,format=raw,file=/usr/share/edk2/ovmf/OVMF_VARS.fd -usb -device usb-tablet</span><br><span class="line"></span><br><span class="line"><span class="comment"># QEMU parameter</span></span><br><span class="line">-M (-machine)  q35,accel=kvm</span><br><span class="line">-cpu host (Icelake-Server,…,<span class="built_in">help</span>)</span><br><span class="line">-m [size=]megs[,slots=n,maxmem=size]</span><br><span class="line">-mem-prealloc</span><br><span class="line">-smp [cpus=]n[,cores=cores][,threads=threads][,sockets=sockets][,maxcpus=maxcpus]</span><br><span class="line">-drive file=&lt;&gt;,<span class="keyword">if</span>=&lt;&gt;,<span class="built_in">id</span>=&lt;&gt;,format=&lt;&gt;</span><br><span class="line">-device //designate various front-end devices; usually use with other options</span><br><span class="line">-device <span class="built_in">help</span>   //list all supported devices</span><br><span class="line">-display</span><br><span class="line">-usb -device usb-tablet  //useful <span class="keyword">for</span> Windows Guest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 vm </span></span><br><span class="line"><span class="comment"># 使用 tcp</span></span><br><span class="line">qemu-system-x86_64 -M q35,accel=kvm -cpu host -smp 16 -m 32G -drive file=centos8.img,<span class="keyword">if</span>=none,<span class="built_in">id</span>=virtio-disk0,format=raw -device virtio-blk-pci,drive=virtio-disk0,bootindex=1 -nic user,hostfwd=tcp::5555-:22 -usb -device usb-tablet</span><br><span class="line"></span><br><span class="line"><span class="variable">$QEMU</span> -enable-kvm -m 4096 -smp 4 -monitor telnet:127.0.0.1:1234,server,nowait -cpu host -drive file=./centos-8.4-embargo.qcow2,<span class="keyword">if</span>=none,<span class="built_in">id</span>=virtio-disk0 -device virtio-blk-pci,drive=virtio-disk0 -bios /usr/local/share/qemu/OVMF.fd -serial stdio -nographic</span><br><span class="line"></span><br><span class="line">ssh -p 5555 wq@localhost</span><br><span class="line"></span><br><span class="line">ssh-keygen -f <span class="string">&quot;/home/wq/.ssh/known_hosts&quot;</span> -R <span class="string">&quot;[localhost]:5555&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 telnet</span></span><br><span class="line">qemu-system-x86_64 -M q35,accel=kvm -cpu host -smp 8 -m 32G -drive file=rhel7.img,<span class="keyword">if</span>=none,<span class="built_in">id</span>=virtio-disk0,format=qcow2 -device virtio-blk-pci,drive=virtio-disk0,bootindex=1 -monitor telnet::12345,server,nowait</span><br><span class="line">telnet localhost 12345</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在终端显示启动</span></span><br><span class="line">qemu-system-x86_64 -machine q35,accel=kvm -cpu host -smp 2 -m 4G -drive file=/wudan/centos-2022518.img,<span class="keyword">if</span>=virtio,<span class="built_in">id</span>=virtio-disk0,format=raw -nographic -drive <span class="keyword">if</span>=pflash,format=raw,<span class="built_in">readonly</span>=on,file=/usr/share/OVMF/OVMF_CODE.fd -drive <span class="keyword">if</span>=pflash,format=raw,file=/usr/share/OVMF/OVMF_VARS.fd</span><br><span class="line"></span><br><span class="line"><span class="comment"># pty</span></span><br><span class="line">qemu-system-x86_64 -monitor pty</span><br><span class="line">minicom -D /dev/pts/xxx</span><br></pre></td></tr></table></figure>

<p><a target="_blank" rel="noopener" href="https://www.jianshu.com/p/bedc41a8c825">yum search 的用法</a></p>
<h2 id="qemu-虚机扩容"><a href="#qemu-虚机扩容" class="headerlink" title="qemu 虚机扩容"></a>qemu 虚机扩容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -F raw -b rhel8u3.img -f qcow2 rhel8u3.qcow2</span><br><span class="line">qemu-img info rhel8u3.qcow2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩容</span></span><br><span class="line">qemu-img resize test.qcow2 +5G</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建磁盘分区</span></span><br><span class="line">fdisk /dev/vda</span><br><span class="line"><span class="comment"># m -&gt; n -&gt; Enter (default partition) -&gt; w(exit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新分区</span></span><br><span class="line">partprobe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化</span></span><br><span class="line">mkfs -t ext4 /dev/vda3</span><br><span class="line"></span><br><span class="line"><span class="comment"># mount</span></span><br><span class="line">mount /dev/vda3 /home</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line"><span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看uuid</span></span><br><span class="line">blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启自动挂载</span></span><br><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure>

<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/han0373/article/details/107861814">qemu虚机扩容_bboyHan的博客-CSDN博客_qemu 扩容</a></p>
<h2 id="添加磁盘"><a href="#添加磁盘" class="headerlink" title="添加磁盘"></a>添加磁盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-drive  file=/home/wdm/SGX-centos-stream-embargo-8-disk.qcow2</span><br></pre></td></tr></table></figure>
<h2 id="qemu-创建快照"><a href="#qemu-创建快照" class="headerlink" title="qemu 创建快照"></a>qemu 创建快照</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/heybob/article/details/17304633">qemu创建快照_heybob的博客-CSDN博客_qemu 快照</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -F raw -b rhel8u3.img -f qcow2 rhel8u3.qcow2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建快照，现在支持qcow2格式镜像，如果是raw的就转格式吧</span></span><br><span class="line">qemu-img  snapshot -c xp3-virtio-IE8_anapshot xp3-virtio-IE8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看快照</span></span><br><span class="line">qemu-img  snapshot -l xp3-virtio-IE8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复快照</span></span><br><span class="line">qemu-img snapshot -a xp3-virtio-IE8_anapshot xp3-virtio-IE8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除快照</span></span><br><span class="line">qemu-img  snapshot -d xp3-virtio-IE8_anapshot xp3-virtio-IE8</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 回收实际内容为0的空间</span><br><span class="line">qemu-img convert -O qcow2 original.qcow2 new.qcow2</span><br></pre></td></tr></table></figure>

<h2 id="vnc连接"><a href="#vnc连接" class="headerlink" title="vnc连接"></a>vnc连接</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_44543463/article/details/113846220">ubuntu使用VNC实现远程桌面_Half_A的博客-CSDN博客_ubuntu vnc 远程桌面</a><br><a target="_blank" rel="noopener" href="https://juejin.cn/post/6847902222055915533">centos7 安装VNC Server - 掘金</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看服务开启情况</span></span><br><span class="line">systemctl list-unit-files | grep x11vnc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下监听端口</span></span><br><span class="line">sudo ss -tunlp</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-x86_64 xxx -vnc :1</span><br></pre></td></tr></table></figure>

<h1 id="Kernel"><a href="#Kernel" class="headerlink" title="Kernel"></a>Kernel</h1><h2 id="config"><a href="#config" class="headerlink" title=".config"></a>.config</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CONFIG_MODULE_SIG=y</span><br><span class="line">表示开启了签名机制。</span><br><span class="line"></span><br><span class="line">CONFIG_MODULE_SIG_FORCE=y   </span><br><span class="line">则模块必须有正确的签名才能正常使用。</span><br><span class="line"></span><br><span class="line">CONFIG_MODULE_SIG_ALL=y   </span><br><span class="line">内核在编译的时候，会主动去给模块签名。</span><br><span class="line"></span><br><span class="line">CONFIG_DEBUG_INFO_BTF=n</span><br></pre></td></tr></table></figure>

<h2 id="内核版本名称"><a href="#内核版本名称" class="headerlink" title="内核版本名称"></a>内核版本名称</h2><p><img src="/__%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled.png" alt="Untitled"></p>
<p><a target="_blank" rel="noopener" href="https://zhuanlan.zhihu.com/p/358038347">Linux 内核编译 LOCALVERSION 配置(分析内核版本号自动添加的”+”号)</a></p>
<h2 id="内核编译"><a href="#内核编译" class="headerlink" title="内核编译"></a>内核编译</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_62882080/article/details/124260136">ubuntu(20.04)+linux内核（5.17.3）编译内核_CZAO的博客-CSDN博客</a></p>
<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_39819990/article/details/106605430">Linux:编译内核教程（全）_修勾的夜晚的博客-CSDN博客_ubuntu内核编译</a></p>
<p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/jackron/p/14152453.html">ubuntu内核编译、安装</a></p>
<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/a593796769/article/details/9009105">编译内核 常用命令_话题在绕弯的博客-CSDN博客</a></p>
<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/u010356768/article/details/105805483">No rule to make target ‘certs&#x2F;rhel.pem’, needed by ‘certs&#x2F;x509_certificate_list’_Errol_King的博客-CSDN博客_certs&#x2F;x509_certificate_list</a></p>
<p><a target="_blank" rel="noopener" href="https://bbs.huaweicloud.com/blogs/283609">CentOS 7下源码编译安装新版本内核-云社区-华为云</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">sudo apt install libncurses5-dev openssl libssl-dev build-essential pkg-config libc6-dev bison flex libelf-dev zlibc minizip libidn11-dev libidn11 qttools5-dev liblz4-tool</span><br><span class="line"></span><br><span class="line"><span class="comment"># centos8</span></span><br><span class="line">yum -y groupinstall <span class="string">&quot;development tools&quot;</span> <span class="comment"># 安装开发工具包组</span></span><br><span class="line">yum group info <span class="string">&#x27;Development Tools&#x27;</span> <span class="comment"># To list all of the software in the package group</span></span><br><span class="line">yum -y install ncurses-devel <span class="comment"># 安装ncurse-devel包 （make menuconfig 文本界面窗口依赖包）</span></span><br><span class="line">yum -y install libncurses* openssl-devel pcre-devel bc python3</span><br><span class="line"></span><br><span class="line">make -S <span class="comment"># 编译中出现错误停止****</span></span><br><span class="line">mkinitramfs /lib/modules/5.17.3 -o /boot/initrd.img-5.17.3-generic</span><br><span class="line"><span class="built_in">cp</span> /usr/src/linux-4.18.14/arch/x86/boot/bzImage /boot/vmlinuz-4.18.14-generic</span><br><span class="line"><span class="built_in">cp</span> /usr/src/linux-4.18.14/System.map /boot/System.map-4.18.14</span><br></pre></td></tr></table></figure>

<p><a target="_blank" rel="noopener" href="https://blog.csdn.net/gatieme/article/details/105620245">使用 INSTALL_MOD_STRIP 在 modules_install 的时候 strip 驱动, 减少磁盘占用</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装编译好的modules</span></span><br><span class="line">make modules_install</span><br><span class="line"></span><br><span class="line">make INSTALL_MOD_STRIP=1  -j200 modules_install <span class="comment"># 安装modules时裁剪掉调试信息</span></span><br><span class="line"><span class="comment"># 等同于：</span></span><br><span class="line">find /lib/modules/XXX -name *.ko | xargs strip -g</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  DESCEND objtool</span><br><span class="line">  CALL    scripts/atomic/check-atomics.sh</span><br><span class="line">  CALL    scripts/checksyscalls.sh</span><br><span class="line">  CHK     include/generated/compile.h</span><br><span class="line">  LD      <span class="built_in">arch</span>/x86/boot/compressed/vmlinux</span><br><span class="line"><span class="built_in">arch</span>/x86/boot/compressed/kaslr.o: In <span class="keyword">function</span> `kaslr_get_random_long<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">kaslr.c:(.text+0x5cc): undefined reference to `cc_platform_has&#x27;</span></span><br><span class="line">ld: <span class="built_in">arch</span>/x86/boot/compressed/vmlinux: hidden symbol `cc_platform_has<span class="string">&#x27; isn&#x27;</span>t defined</span><br><span class="line">ld: final <span class="built_in">link</span> failed: Bad value</span><br><span class="line"><span class="built_in">arch</span>/x86/boot/compressed/Makefile:112: recipe <span class="keyword">for</span> target <span class="string">&#x27;arch/x86/boot/compressed/vmlinux&#x27;</span> failed</span><br><span class="line">make[2]: *** [<span class="built_in">arch</span>/x86/boot/compressed/vmlinux] Error 1</span><br><span class="line"><span class="built_in">arch</span>/x86/boot/Makefile:115: recipe <span class="keyword">for</span> target <span class="string">&#x27;arch/x86/boot/compressed/vmlinux&#x27;</span> failed</span><br><span class="line">make[1]: *** [<span class="built_in">arch</span>/x86/boot/compressed/vmlinux] Error 2</span><br><span class="line"><span class="built_in">arch</span>/x86/Makefile:274: recipe <span class="keyword">for</span> target <span class="string">&#x27;bzImage&#x27;</span> failed</span><br><span class="line">make: *** [bzImage] Error 2</span><br><span class="line">make: *** Waiting <span class="keyword">for</span> unfinished <span class="built_in">jobs</span>....</span><br></pre></td></tr></table></figure>
<p>.config 有问题</p>
<h2 id="编译指定模块"><a href="#编译指定模块" class="headerlink" title="编译指定模块"></a>编译指定模块</h2><p><a target="_blank" rel="noopener" href="https://blog.51cto.com/u_15127621/2763703">KVM模块单独编译(适合调试)</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单独编译KVM模块</span></span><br><span class="line">make -j8 -C `<span class="built_in">pwd</span>` M=`<span class="built_in">pwd</span>`/arch/x86/kvm modules</span><br><span class="line">make -j8 M=<span class="built_in">arch</span>/x86/kvm modules</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> <span class="built_in">arch</span>/x86/kvm/kvm.ko /lib/modules/<span class="variable">$KERNEL</span>/kernel/arch/x86/kvm </span><br><span class="line"><span class="built_in">cp</span> <span class="built_in">arch</span>/x86/kvm/kvm-intel.ko /lib/modules/<span class="variable">$KERNEL</span>/kernel/arch/x86/kvm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载kvm模块</span></span><br><span class="line">modprobe -r kvm_intel</span><br><span class="line"><span class="comment"># 加载模块</span></span><br><span class="line">modprobe kvm-intel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装kvm模块</span></span><br><span class="line">insmod kvm.ko</span><br><span class="line">insmod kvm-intel.ko</span><br><span class="line"></span><br><span class="line">modprobe --dump-modversions module.ko</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译模块</span></span><br><span class="line">[root@emr-bkc ~]<span class="comment"># cat test_tsx_disable/Makefile</span></span><br><span class="line">obj-m :=test.o</span><br><span class="line">[root@emr-bkc ~]<span class="comment"># ls test_tsx_disable</span></span><br><span class="line">Makefile  modules.order  Module.symvers  test.c  test.ko  test.mod  test.mod.c  test.mod.o  test.o</span><br><span class="line"></span><br><span class="line">make -C /lib/modules/6.2.0-emr.bkc.6.2.4.4.32.x86_64/build M=<span class="variable">$PWD</span> modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若缺乏build文件</span></span><br><span class="line">/lib/modules/6.2.0-emr.bkc.6.2.4.4.32.x86_64/build -&gt; /usr/src/kernels/6.2.0-emr.bkc.6.2.4.4.32.x86_64</span><br><span class="line">dnf install kernel-emr-bkc-devel-6.2.4.4-32.el9.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="编译错误输出到文件"><a href="#编译错误输出到文件" class="headerlink" title="编译错误输出到文件"></a>编译错误输出到文件</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/weixin_42082222/article/details/90380450">如何将编译Log输出到文件中_markvz的博客-CSDN博客_编译打印log</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make &gt;right.log : 只将编译正确的信息输出到right.log文件中</span><br><span class="line">make 2&gt;error.log：只将编译错误的信息输出到error.log中</span><br><span class="line">make &gt;build.log 2&gt;&amp;1 : 将正确和错误的Log全都输出到build.log文件中</span><br></pre></td></tr></table></figure>

<h2 id="grub-设置"><a href="#grub-设置" class="headerlink" title="grub 设置"></a>grub 设置</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_39852676/article/details/112853995">配置Grub2实现串口终端控制Linux系统_绛洞花主敏明的博客-CSDN博客</a></p>
<p>若进入了 grub cmd</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> <span class="comment"># 查看</span></span><br><span class="line"><span class="built_in">set</span> root=(hd0,gpt1)</span><br><span class="line"><span class="built_in">set</span> prefix=/boot/grub <span class="comment"># grub路径设置</span></span><br><span class="line">linux (hd0,gpt1)/</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;console=hvc0 console=ttyS0,115200n8&quot;</span></span><br></pre></td></tr></table></figure>
<p><a target="_blank" rel="noopener" href="https://www.cnblogs.com/jins-note/p/9513335.html">怎样修复grub开机引导(grub rescue)</a></p>
<h2 id="CentOS-默认启动-kernel-设置"><a href="#CentOS-默认启动-kernel-设置" class="headerlink" title="CentOS 默认启动 kernel 设置"></a>CentOS 默认启动 kernel 设置</h2><p><a target="_blank" rel="noopener" href="https://www.sqmn666.com/archives/centos8-geng-gai-mo-ren-qi-dong-nei-he">CentOS8更改默认启动内核 - 神奇码农的博客</a></p>
<p><a target="_blank" rel="noopener" href="https://www.4spaces.org/centos7-change-kernel-order/">CENTOS 7更换系统启动默认内核-四个空格</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># centos8</span></span><br><span class="line">grubby --default-kernel <span class="comment"># 查看默认启动内核</span></span><br><span class="line">grubby --info=ALL <span class="comment"># 查看所有内核</span></span><br><span class="line">grubby --set-default /boot/vmlinuz-4.18.0 <span class="comment"># 设置默认内核</span></span><br><span class="line">grubby --default-title</span><br><span class="line"></span><br><span class="line"><span class="comment">#centos7</span></span><br><span class="line">grub2-editenv list <span class="comment"># 查看默认启动内核</span></span><br><span class="line"><span class="built_in">cat</span> /boot/grub2/grub.cfg | grep menuentry <span class="comment"># 查看所有内核</span></span><br><span class="line">grub2-set-default <span class="string">&#x27;CentOS Linux (3.10.0-862.el7.x86_64) 7 (Core)&#x27;</span> <span class="comment"># 设置默认内核</span></span><br><span class="line"></span><br><span class="line">grub2-mkconfig -o grub.cfg</span><br></pre></td></tr></table></figure>

<p><a target="_blank" rel="noopener" href="https://www.cxyzjd.com/article/yy15880408695/104130524">CentOS8卸载旧版本内核 并 更新启动时内核选项grub2_yy15880408695的博客-程序员宅基地_centos8 删除旧内核 - 程序员宅基地</a></p>
<h2 id="Kernel-packaging"><a href="#Kernel-packaging" class="headerlink" title="Kernel packaging"></a>Kernel packaging</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dnf --enablerepo=powertools install dwarves</span><br><span class="line">make rpm-pkg -j 128 <span class="comment"># Build both source and binary RPM kernel packages</span></span><br><span class="line"></span><br><span class="line">[root@984fee00be8d tdx]<span class="comment"># ll /root/rpmbuild/RPMS/x86_64/*.rpm</span></span><br><span class="line">-rw-r--r-- 1 root root 472148204 Jun  5 12:29 /root/rpmbuild/RPMS/x86_64/kernel-6.3.0_kvm_upstream_2023.05.09_v6.3_workaround+-5.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 187545644 Jun  5 12:30 /root/rpmbuild/RPMS/x86_64/kernel-devel-6.3.0_kvm_upstream_2023.05.09_v6.3_workaround+-5.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root   1563124 Jun  5 12:29 /root/rpmbuild/RPMS/x86_64/kernel-headers-6.3.0_kvm_upstream_2023.05.09_v6.3_workaround+-5.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h1 id="selftest"><a href="#selftest" class="headerlink" title="selftest"></a>selftest</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./tools/testing/selftests/kvm</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<h1 id="kvm-unit-test"><a href="#kvm-unit-test" class="headerlink" title="kvm-unit-test"></a>kvm-unit-test</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line"><span class="comment"># ./configure --arch=i386</span></span><br><span class="line"><span class="comment"># ./configure --arch=x86_64</span></span><br><span class="line">make standalone <span class="comment"># 所有binary都在 ./test 下面</span></span><br><span class="line">./run_tests.sh <span class="comment"># 执行所有测试</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> QEMU=&lt;path to qemu&gt; <span class="comment"># 设定好qemu的执行路径</span></span><br></pre></td></tr></table></figure>

<h1 id="OVMF"><a href="#OVMF" class="headerlink" title="OVMF"></a>OVMF</h1><p>SPR</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/qemu/</span><br></pre></td></tr></table></figure>

<p>GNR</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@gnr-bkc ~]<span class="comment"># dnf install tdvf-2022.ww20.1-5.el8</span></span><br><span class="line">[root@gnr-bkc ~]<span class="comment"># ll /usr/share/qemu/</span></span><br><span class="line">total 15856</span><br><span class="line">drwxr-xr-x. 2 root root      87 Jan 20 06:01 firmware</span><br><span class="line">-rw-r--r--. 1 root root 3653632 Dec  1 14:44 OVMF_CODE.debug.fd</span><br><span class="line">-rw-r--r--. 1 root root 3653632 Dec  1 14:44 OVMF_CODE.fd</span><br><span class="line">-rw-r--r--. 1 root root 4194304 Dec  1 14:44 OVMF.debug.fd</span><br><span class="line">-rw-r--r--. 1 root root 4194304 Dec  1 14:44 OVMF.fd</span><br><span class="line">-rw-r--r--. 1 root root  540672 Dec  1 14:44 OVMF_VARS.fd</span><br><span class="line">drwxr-xr-x. 2 root root      36 Jan 20 06:01 vhost-user</span><br></pre></td></tr></table></figure>

<p>SNR (not sure if OVMF works)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ocsbesrhlrepo01 kvm]<span class="comment"># ll /usr/share/OVMF/</span></span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx. 1 root root 33 Aug  5  2022 OVMF_CODE.secboot.fd -&gt; ../edk2/ovmf/OVMF_CODE.secboot.fd</span><br><span class="line">lrwxrwxrwx. 1 root root 25 Aug  5  2022 OVMF_VARS.fd -&gt; ../edk2/ovmf/OVMF_VARS.fd</span><br><span class="line">lrwxrwxrwx. 1 root root 33 Aug  5  2022 OVMF_VARS.secboot.fd -&gt; ../edk2/ovmf/OVMF_VARS.secboot.fd</span><br><span class="line">lrwxrwxrwx. 1 root root 26 Aug  5  2022 UefiShell.iso -&gt; ../edk2/ovmf/UefiShell.iso</span><br></pre></td></tr></table></figure>

<h1 id="内核调试"><a href="#内核调试" class="headerlink" title="内核调试"></a>内核调试</h1><p><a target="_blank" rel="noopener" href="https://huhaipeng.top/2019/12/29/Linux%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95-%E4%B9%8B-qemu+gdb/">Linux内核调试 之 qemu+gdb - HHP的博客 | HHP Blog (huhaipeng.top)</a><br><a target="_blank" rel="noopener" href="https://cloud.tencent.com/developer/article/1057300">linux设备驱动第四篇：linux驱动调试方法 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install cpuid</span></span><br><span class="line">yum install cpuid</span><br><span class="line">yum -ivh https://dl.fedoraproject.org/pub/epel/8/Everything/x86_64/Packages/c/cpuid-20230120-2.el8.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># install rdmsr</span></span><br><span class="line">install msr-tools</span><br></pre></td></tr></table></figure>

<p>related: <a href="../%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/-WARN.md">-WARN</a></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pr_info(<span class="string">&quot;wq: %s/%d %s\n&quot;</span>, current-&gt;comm, current-&gt;pid, __func__);</span><br><span class="line">pr_info_once(<span class="string">&quot;wq: %s/%d %s\n&quot;</span>, current-&gt;comm, current-&gt;pid, __func__);</span><br><span class="line">pr_debug(<span class="string">&quot;++++++++++++++++++++=_---CPU UP  %u\n&quot;</span>, cpu);</span><br><span class="line">pr_warn(<span class="string">&quot;...&quot;</span>, ...);</span><br><span class="line">WARN_ON()</span><br><span class="line">WARN_ON_ONCE()</span><br><span class="line">BUG_ON()</span><br></pre></td></tr></table></figure>
<h2 id="打印log"><a href="#打印log" class="headerlink" title="打印log"></a>打印log</h2><h3 id="printk打印"><a href="#printk打印" class="headerlink" title="printk打印"></a>printk打印</h3><p><a target="_blank" rel="noopener" href="https://www.zhaixue.cc/kernel/kernel-debug.html">内核调试 - Linux内核编程 | 宅学部落</a></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_EMERG<span class="string">&quot;&lt;0&gt;&quot;</span>    <span class="comment">/*紧急事件消息，系统崩溃之前提示，表示系统不可用*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_ALERT<span class="string">&quot;&lt;1&gt;&quot;</span>    <span class="comment">/*报告消息，表示必须立即采取措施*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_CRIT<span class="string">&quot;&lt;2&gt;&quot;</span>     <span class="comment">/*临界条件，通常涉及严重的硬件或软件操作失败*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_ERR<span class="string">&quot;&lt;3&gt;&quot;</span>      <span class="comment">/*错误条件，驱动程序常用KERN_ERR来报告硬件的错误*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_WARNING<span class="string">&quot;&lt;4&gt;&quot;</span>  <span class="comment">/*警告条件，对可能出现问题的情况进行警告*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_NOTICE<span class="string">&quot;&lt;5&gt;&quot;</span>   <span class="comment">/*正常但又重要的条件，用于提醒。常用于与安全相关的消息*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_INFO<span class="string">&quot;&lt;6&gt;&quot;</span>     <span class="comment">/*提示信息，如驱动程序启动时，打印硬件信息*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KERN_DEBUG<span class="string">&quot;&lt;7&gt;&quot;</span>    <span class="comment">/*调试级别的消息*/</span></span></span><br><span class="line"> </span><br><span class="line">printk(KERN_INFO <span class="string">&quot;hello zhaixue.cc/n&quot;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看和修改控制台的打印等级</span><br><span class="line">cat /proc/sys/kernel/printk</span><br><span class="line"># <span class="number">7</span> <span class="number">4</span> <span class="number">1</span> <span class="number">7</span></span><br><span class="line">- 控制台打印等级：优先级高于该值的printk打印才会输出到控制台重定向的串口或屏幕上</span><br><span class="line">- 默认的消息日志级别</span><br><span class="line">- 最低的控制台日志级别</span><br><span class="line">- 默认的控制台日志级别</span><br><span class="line"></span><br><span class="line">数字越小，优先级越高</span><br></pre></td></tr></table></figure>

<h3 id="跟踪内核异常"><a href="#跟踪内核异常" class="headerlink" title="跟踪内核异常"></a>跟踪内核异常</h3><ul>
<li>WARN(condition, format…)：condition为触发异常的条件，打印格式类似 printk</li>
<li>WARN_ON(condition)：调用dump_stack，不会OOPS</li>
<li>BUG()：内核界的断言，触发内核OOPS，输出log</li>
<li>BUG_ON(condition)：条件触发内核OOPS，输出log</li>
<li>panic(fmt…)：系统crashed，输出log</li>
</ul>
<h2 id="core-dump"><a href="#core-dump" class="headerlink" title="core dump"></a>core dump</h2><p><a target="_blank" rel="noopener" href="https://stackoverflow.com/questions/5745215/getting-stacktrace-from-core-dump">linux - getting stacktrace from core dump - Stack Overflow</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb /usr/bin/myapp.binary corefile</span><br></pre></td></tr></table></figure>
<p>Then, use one of:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(gdb) bt</span><br><span class="line">(gdb) bt full</span><br><span class="line">(gdb) info threads</span><br><span class="line">(gdb) thread apply all bt</span><br><span class="line">(gdb) thread apply all bt full</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># compile with debug_info=y and then fed the faulting addr into faddr2line (CONFIG_DEBUG_INFO)</span></span><br><span class="line">scripts/faddr2line <span class="built_in">arch</span>/x86/kvm/kvm-intel.ko vmx_check_cpuid+0x98</span><br></pre></td></tr></table></figure>
<h1 id="qemu-调试"><a href="#qemu-调试" class="headerlink" title="qemu 调试"></a>qemu 调试</h1><h2 id="trace-xxx"><a href="#trace-xxx" class="headerlink" title="trace_xxx"></a>trace_xxx</h2><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/Shirleylinyuer/article/details/80283008">How to debug qemu using trace-event?_shirleylinyuer的博客-CSDN博客</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># build qemu</span></span><br><span class="line">./configure --disable-strip --enable-trace-backends=simple --prefix=/usr --target-list=x86_64-softmmu --enable-kvm</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;*&quot;</span> &gt; /tmp/events</span><br><span class="line">qemu -trace events=/tmp/events,file=trace.bin</span><br><span class="line"></span><br><span class="line">./scripts/simpletrace.py ./build/trace/trace-events-all trace.bin &gt; trace.log</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="pstack"><a href="#pstack" class="headerlink" title="pstack"></a>pstack</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstack &lt;pid&gt;</span><br></pre></td></tr></table></figure>
<h1 id="live-migration"><a href="#live-migration" class="headerlink" title="live migration"></a>live migration</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># migrate to different host</span></span><br><span class="line"><span class="comment"># src</span></span><br><span class="line"><span class="variable">$QEMU</span> -M q35,accel=kvm -cpu host -smp 24 -m 16G -drive file=/home/wq/centos-s8.img,format=raw,index=0 -nic user,hostfwd=tcp::5550-:22 -monitor pty -nographic</span><br><span class="line"></span><br><span class="line"><span class="comment"># dist</span></span><br><span class="line"><span class="variable">$QEMU</span> -M q35,accel=kvm -cpu host -smp 24 -m 16G -drive file=/home/wq/centos-s8.img,format=raw,index=0 -nic user,hostfwd=tcp::5552-:22 -monitor pty -nographic -incoming tcp:0:6662</span><br><span class="line"></span><br><span class="line"><span class="comment"># src monitor</span></span><br><span class="line">migrate tcp:10.165.57.49:6662</span><br></pre></td></tr></table></figure>

<p>报错 <code>qemu-system-x86_64: Failed to connect to &#39;10.165.57.49:6662&#39;: No route to host</code><br><a target="_blank" rel="noopener" href="https://serverfault.com/questions/903649/no-route-to-host-with-static-ip-able-to-ping">networking - “no route to host” with static IP. Able to ping - Server Fault</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -nvL <span class="comment"># 查看firewall rules</span></span><br><span class="line">firewall-cmd --add-port=6662/tcp</span><br></pre></td></tr></table></figure>
<h1 id="反汇编"><a href="#反汇编" class="headerlink" title="反汇编"></a>反汇编</h1><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/zoomdy/article/details/50563680">objdump反汇编用法示例_半斗米的博客-CSDN博客_objdump -d a.</a></p>
<h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="相关指令"><a href="#相关指令" class="headerlink" title="相关指令"></a>相关指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">ip <span class="built_in">link</span> show</span><br><span class="line">nm-connection-editor</span><br><span class="line"></span><br><span class="line">nmtui</span><br><span class="line">nmcli (new)</span><br><span class="line"></span><br><span class="line">Result config files location:</span><br><span class="line">/etc/sysconfig/network-scripts/</span><br></pre></td></tr></table></figure>

<h2 id="centos-设置静态-IP"><a href="#centos-设置静态-IP" class="headerlink" title="centos 设置静态 IP"></a>centos 设置静态 IP</h2><p><a target="_blank" rel="noopener" href="https://cloud.tencent.com/developer/article/1721181">CentOS设置静态IP的方法总结 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p>ubuntu server 虚拟机网络<br><a target="_blank" rel="noopener" href="https://blog.csdn.net/qq_35371031/article/details/103135656">Ubuntu 18.04 Server 没有ip地址解决办法(设置静态IP)_仲冬初七的博客-CSDN博客</a><br><a target="_blank" rel="noopener" href="https://blog.csdn.net/soldi_er/article/details/115192347">问题：Ubuntu虚拟机没有IP地址_区块链市场观察家的博客-CSDN博客_ubuntu没有ip地址</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/netplan/xxxx.ymal</span><br><span class="line"><span class="comment"># 如果没有此文件通过sudo netplan generate命令自动生成</span></span><br><span class="line"><span class="comment"># 修改文件内容</span></span><br><span class="line">network:</span><br><span class="line">    ethernets:</span><br><span class="line">        ens33:</span><br><span class="line">            dhcp4: <span class="literal">true</span></span><br><span class="line">            dhcp6: <span class="literal">true</span></span><br><span class="line">    version: 2</span><br><span class="line"></span><br><span class="line">sudo netplan apply <span class="comment"># 再次查看，出现ip</span></span><br><span class="line">sudo dhclient ens33 <span class="comment"># 为网卡分配IP地址(似乎没用)</span></span><br><span class="line"></span><br><span class="line">/etc/network/interfaces</span><br></pre></td></tr></table></figure>

<h2 id="创建网桥-virtbr0"><a href="#创建网桥-virtbr0" class="headerlink" title="创建网桥 virtbr0"></a>创建网桥 virtbr0</h2><p><a target="_blank" rel="noopener" href="https://www.onitroad.com/jc/linux/centos/sysadmin/network/how-to-create-bridge-network.html">如何在CentOS 8中创建网桥</a></p>
<h2 id="网络代理配置"><a href="#网络代理配置" class="headerlink" title="网络代理配置"></a>网络代理配置</h2><p><em>centos</em> spr centos stream9</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tested on virtual machine</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://proxy-dmz.intel.com:911&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://proxy-dmz.intel.com:912&quot;</span></span><br><span class="line"></span><br><span class="line">vim /etc/yum.conf</span><br><span class="line"><span class="comment"># add</span></span><br><span class="line">proxy=http://proxy-dmz.intel.com:911</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line"><span class="comment"># add epel*.repo</span></span><br><span class="line"><span class="comment"># add Intel-OVirt.repo</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果是 ping 有问题，那就：</p>
<ol>
<li>在Linux系统中输入命令:   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure></li>
<li>修改文件中的ONBOOT&#x3D;no,将no改为yes</li>
<li>重启服务: service network restart</li>
</ol>
<p><code>/etc/resolv.conf</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Generated by NetworkManager</span></span><br><span class="line">search jf.intel.com</span><br><span class="line">nameserver 10.248.2.1</span><br><span class="line">nameserver 10.22.224.196</span><br><span class="line">nameserver 172.25.162.23</span><br></pre></td></tr></table></figure>
<p>ralated: <a href="../%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux%E6%8C%87%E4%BB%A4.md#%E4%BF%AE%E6%94%B9repo">修改repo</a></p>
<p><em>ubuntu</em></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://child-prc.sh.intel.com:913&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://child-prc.sh.intel.com:913&quot;</span></span><br><span class="line"></span><br><span class="line">vim /etc/apt/apt.conf.d/80proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># add the follow content</span></span><br><span class="line">Acquire::http::proxy <span class="string">&quot;http://child-prc.sh.intel.com:913/&quot;</span>;</span><br><span class="line">Acquire::https::proxy <span class="string">&quot;https://child-prc.sh.intel.com:913/&quot;</span>;</span><br><span class="line">Acquire::ftp::proxy <span class="string">&quot;ftp://child-prc.sh.intel.com:913/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># then, apt install is avaliable.</span></span><br></pre></td></tr></table></figure>

<p><em>spr centos vm</em><br>相关内容： <a href="../work/CG.md#%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BD%91%E7%BB%9C">虚拟机网络</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改yum.conf</span></span><br><span class="line">vim /etc/yum.conf <span class="comment"># 添加下列proxy</span></span><br><span class="line">proxy=http://proxy-chain.intel.com:911</span><br><span class="line"></span><br><span class="line"><span class="comment"># resolv.conf</span></span><br><span class="line">vim /etc/resolv.conf <span class="comment"># 添加下列内容</span></span><br><span class="line">search proxy-chain.intel.com</span><br><span class="line">nameserver 10.248.2.1</span><br><span class="line">nameserver 10.22.224.196</span><br><span class="line">nameserver 10.3.86.116</span><br><span class="line"></span><br><span class="line">yum update <span class="comment"># 测试网络是否可用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export (这一步似乎不用也可以)</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://proxy-chain.intel.com:911&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://proxy-chain.intel.com:912&quot;</span></span><br></pre></td></tr></table></figure>

<p><em>spr ubuntu vm</em></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/apt/apt.conf.d/80proxy 中添加：</span></span><br><span class="line">Acquire::http::proxy <span class="string">&quot;http://proxy-chain.intel.com:911/&quot;</span>;</span><br><span class="line">Acquire::https::proxy <span class="string">&quot;http://proxy-chain.intel.com:911/&quot;</span>;</span><br><span class="line">Acquire::ftp::proxy <span class="string">&quot;ftp://proxy-chain.intel.com:911/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># resolv.conf</span></span><br><span class="line">vim /etc/resolv.conf <span class="comment"># 添加下列内容</span></span><br><span class="line">search proxy-chain.intel.com</span><br><span class="line">nameserver 10.248.2.1</span><br><span class="line">nameserver 10.22.224.196</span><br><span class="line">nameserver 10.3.86.116</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://proxy-chain.intel.com:911&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://proxy-chain.intel.com:912&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="dm-0"><a href="#dm-0" class="headerlink" title="dm-0"></a>dm-0</h1><p><a target="_blank" rel="noopener" href="https://blog.csdn.net/whatday/article/details/106354092">linux dm-0 dm-1 设备映射 简介_whatday的博客-CSDN博客_dm-0 dm-1 linux</a></p>
<h1 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># files to exclude</span></span><br><span class="line"></span><br><span class="line">#<span class="meta"># kvm</span></span><br><span class="line">bkc, arch/arm, arch/mips/, arch/parisc/, arch/powerpc, arch/x86/power, arch/x86/xen</span><br><span class="line"></span><br><span class="line">#<span class="meta"># qemu</span></span><br><span class="line">build, */arm/, */loongarch/, */mips/, */ppc/, */hppa/, */riscv/, */openrisc/,  */s390*/</span><br></pre></td></tr></table></figure>

    </div>

    
    
    
        

<div>
<ul class="post-copyright">
  <li class="post-copyright-author">
    <strong>本文作者： </strong>wenqian
  </li>
  <li class="post-copyright-link">
    <strong>本文链接：</strong>
    <a href="https://wenq77.github.io/2023/04/09/test%20with%20pic" title="test with pic">https://wenq77.github.io/2023/04/09/test with pic</a>
  </li>
  <li class="post-copyright-license">
    <strong>版权声明： </strong>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="noopener" target="_blank"><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</a> 许可协议。转载请注明出处！
  </li>
</ul>
</div>


      <footer class="post-footer">
          <div class="post-tags">
              <a href="/tags/%E6%B5%8B%E8%AF%95/" rel="tag"># 测试</a>
              <a href="/tags/%E6%B5%8B%E8%AF%952/" rel="tag"># 测试2</a>
          </div>

        


        
    <div class="post-nav">
      <div class="post-nav-item">
    <a href="/1970/01/01/hello-world" rel="prev" title="Hello World">
      <i class="fa fa-chevron-left"></i> Hello World
    </a></div>
      <div class="post-nav-item"></div>
    </div>
      </footer>
    
  </article>
  
  
  



          </div>
          
    <div class="comments" id="valine-comments"></div>

<script>
  window.addEventListener('tabs:register', () => {
    let { activeClass } = CONFIG.comments;
    if (CONFIG.comments.storage) {
      activeClass = localStorage.getItem('comments_active') || activeClass;
    }
    if (activeClass) {
      let activeTab = document.querySelector(`a[href="#comment-${activeClass}"]`);
      if (activeTab) {
        activeTab.click();
      }
    }
  });
  if (CONFIG.comments.storage) {
    window.addEventListener('tabs:click', event => {
      if (!event.target.matches('.tabs-comment .tab-content .tab-pane')) return;
      let commentClass = event.target.classList[1];
      localStorage.setItem('comments_active', commentClass);
    });
  }
</script>

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#QEMU"><span class="nav-number">1.</span> <span class="nav-text">QEMU</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#CentOS-8-%E7%9B%B4%E6%8E%A5%E5%AE%89%E8%A3%85"><span class="nav-number">1.1.</span> <span class="nav-text">CentOS 8 直接安装</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#qemu-%E7%BC%96%E8%AF%91"><span class="nav-number">1.2.</span> <span class="nav-text">qemu 编译</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%88%9B%E5%BB%BAimg"><span class="nav-number">1.3.</span> <span class="nav-text">创建img</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%90%AF%E5%8A%A8-qemu"><span class="nav-number">1.4.</span> <span class="nav-text">启动 qemu</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#qemu-%E8%99%9A%E6%9C%BA%E6%89%A9%E5%AE%B9"><span class="nav-number">1.5.</span> <span class="nav-text">qemu 虚机扩容</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%B7%BB%E5%8A%A0%E7%A3%81%E7%9B%98"><span class="nav-number">1.6.</span> <span class="nav-text">添加磁盘</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#qemu-%E5%88%9B%E5%BB%BA%E5%BF%AB%E7%85%A7"><span class="nav-number">1.7.</span> <span class="nav-text">qemu 创建快照</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#vnc%E8%BF%9E%E6%8E%A5"><span class="nav-number">1.8.</span> <span class="nav-text">vnc连接</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#Kernel"><span class="nav-number">2.</span> <span class="nav-text">Kernel</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#config"><span class="nav-number">2.1.</span> <span class="nav-text">.config</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC%E5%90%8D%E7%A7%B0"><span class="nav-number">2.2.</span> <span class="nav-text">内核版本名称</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91"><span class="nav-number">2.3.</span> <span class="nav-text">内核编译</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%BC%96%E8%AF%91%E6%8C%87%E5%AE%9A%E6%A8%A1%E5%9D%97"><span class="nav-number">2.4.</span> <span class="nav-text">编译指定模块</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA%E5%88%B0%E6%96%87%E4%BB%B6"><span class="nav-number">2.5.</span> <span class="nav-text">编译错误输出到文件</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#grub-%E8%AE%BE%E7%BD%AE"><span class="nav-number">2.6.</span> <span class="nav-text">grub 设置</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#CentOS-%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8-kernel-%E8%AE%BE%E7%BD%AE"><span class="nav-number">2.7.</span> <span class="nav-text">CentOS 默认启动 kernel 设置</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#Kernel-packaging"><span class="nav-number">2.8.</span> <span class="nav-text">Kernel packaging</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#selftest"><span class="nav-number">3.</span> <span class="nav-text">selftest</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#kvm-unit-test"><span class="nav-number">4.</span> <span class="nav-text">kvm-unit-test</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#OVMF"><span class="nav-number">5.</span> <span class="nav-text">OVMF</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%86%85%E6%A0%B8%E8%B0%83%E8%AF%95"><span class="nav-number">6.</span> <span class="nav-text">内核调试</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%89%93%E5%8D%B0log"><span class="nav-number">6.1.</span> <span class="nav-text">打印log</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#printk%E6%89%93%E5%8D%B0"><span class="nav-number">6.1.1.</span> <span class="nav-text">printk打印</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E8%B7%9F%E8%B8%AA%E5%86%85%E6%A0%B8%E5%BC%82%E5%B8%B8"><span class="nav-number">6.1.2.</span> <span class="nav-text">跟踪内核异常</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#core-dump"><span class="nav-number">6.2.</span> <span class="nav-text">core dump</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#qemu-%E8%B0%83%E8%AF%95"><span class="nav-number">7.</span> <span class="nav-text">qemu 调试</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#trace-xxx"><span class="nav-number">7.1.</span> <span class="nav-text">trace_xxx</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#pstack"><span class="nav-number">7.2.</span> <span class="nav-text">pstack</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#live-migration"><span class="nav-number">8.</span> <span class="nav-text">live migration</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%8F%8D%E6%B1%87%E7%BC%96"><span class="nav-number">9.</span> <span class="nav-text">反汇编</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E7%BD%91%E7%BB%9C"><span class="nav-number">10.</span> <span class="nav-text">网络</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%9B%B8%E5%85%B3%E6%8C%87%E4%BB%A4"><span class="nav-number">10.1.</span> <span class="nav-text">相关指令</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#centos-%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81-IP"><span class="nav-number">10.2.</span> <span class="nav-text">centos 设置静态 IP</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%88%9B%E5%BB%BA%E7%BD%91%E6%A1%A5-virtbr0"><span class="nav-number">10.3.</span> <span class="nav-text">创建网桥 virtbr0</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE"><span class="nav-number">10.4.</span> <span class="nav-text">网络代理配置</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#dm-0"><span class="nav-number">11.</span> <span class="nav-text">dm-0</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#vscode"><span class="nav-number">12.</span> <span class="nav-text">vscode</span></a></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">文七安</p>
  <div class="site-description" itemprop="description">流光容易把人抛，红了樱桃，绿了芭蕉</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">2</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
        <span class="site-state-item-count">1</span>
        <span class="site-state-item-name">分类</span>
      </div>
      <div class="site-state-item site-state-tags">
        <span class="site-state-item-count">2</span>
        <span class="site-state-item-name">标签</span>
      </div>
  </nav>
</div>
  <div class="cc-license motion-element" itemprop="license">
    <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" class="cc-opacity" rel="noopener" target="_blank"><img src="/images/cc-by-nc-sa.svg" alt="Creative Commons"></a>
  </div>



      </div>

    </div>
  </aside>
  <div id="sidebar-dimmer"></div>


      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2023</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">文七安</span>
</div>
  <div class="powered-by">由 <a href="https://hexo.io/" class="theme-link" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.org/" class="theme-link" rel="noopener" target="_blank">NexT.Gemini</a> 强力驱动
  </div>

        
<div class="busuanzi-count">
  <script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>
    <span class="post-meta-item" id="busuanzi_container_site_uv" style="display: none;">
      <span class="post-meta-item-icon">
        <i class="fa fa-user"></i>
      </span>
      <span class="site-uv" title="总访客量">
        <span id="busuanzi_value_site_uv"></span>
      </span>
    </span>
    <span class="post-meta-divider">|</span>
    <span class="post-meta-item" id="busuanzi_container_site_pv" style="display: none;">
      <span class="post-meta-item-icon">
        <i class="fa fa-eye"></i>
      </span>
      <span class="site-pv" title="总访问量">
        <span id="busuanzi_value_site_pv"></span>
      </span>
    </span>
</div>








      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>

<script src="/js/utils.js"></script>

<script src="/js/motion.js"></script>


<script src="/js/schemes/pisces.js"></script>


<script src="/js/next-boot.js"></script>




  















  

  


<script>
NexT.utils.loadComments(document.querySelector('#valine-comments'), () => {
  NexT.utils.getScript('//unpkg.com/valine/dist/Valine.min.js', () => {
    var GUEST = ['nick', 'mail', 'link'];
    var guest = 'nick,mail,link';
    guest = guest.split(',').filter(item => {
      return GUEST.includes(item);
    });
    new Valine({
      el         : '#valine-comments',
      verify     : false,
      notify     : true,
      appId      : 'FNFJJGQq7aRlCLSGqdCwUkG4-gzGzoHsz',
      appKey     : 'vP0bPV73dJzZUfFhnY33nBJs',
      placeholder: "Just go go",
      avatar     : 'mm',
      meta       : guest,
      pageSize   : '10' || 10,
      visitor    : false,
      lang       : 'zh-cn' || 'zh-cn',
      path       : location.pathname,
      recordIP   : false,
      serverURLs : ''
    });
  }, window.Valine);
});
</script>

</body>
</html>
